
parameters:

- name: name
  type: string

- name: displayName
  type: string

- name: imageName
  type: string
  default: 'ubuntu-22.04'

- name: buildConfiguration
  type: string
  default: 'Release'

- name: publisherId
  type: string
  default: 'bewhite'

- name: extensionId
  type: string
  default: 'ps-rule'

- name: extensionTag
  type: string
  default: ''

- name: extensionName
  type: string
  default: 'PSRule'

- name: extensionVisibility
  type: string
  default: 'private'

- name: connection
  type: string
  default: 'Visual Studio Marketplace (bewhite)'

jobs:
- job: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: ${{ parameters.imageName }}
  steps:

  # Install pipeline dependencies
  - powershell: ./scripts/pipeline-deps.ps1
    displayName: 'Install dependencies'

  # Install GitVersion
  - pwsh: dotnet tool install --global GitVersion.Tool
    displayName: 'Install GitVersion'

  # Install TFS CLI
  - task: TfxInstaller@3
    displayName: 'Install tfx-cli'
    inputs:
      version: 'v0.16.x'

  # Download extension
  - task: DownloadPipelineArtifact@1
    displayName: 'Download extension package'
    inputs:
      artifactName: Extension
      downloadPath: $(Build.SourcesDirectory)/out/extension

  # Get extension version
  - powershell: Invoke-Build GetVersionInfo -Build $(Build.BuildNumber) -ExtensionTag '${{ parameters.extensionTag }}'
    displayName: 'Get extension version'

  # Publish extension
  - task: PublishAzureDevOpsExtension@3
    displayName: 'Publish extension to marketplace'
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      fileType: vsix
      vsixFile: $(Build.SourcesDirectory)/out/extension/bewhite.ps-rule-*.vsix
      publisherId: ${{ parameters.publisherId }}
      extensionId: ${{ parameters.extensionId }}
      extensionTag: ${{ parameters.extensionTag }}
      extensionName: ${{ parameters.extensionName }}
      extensionVersion: $(EXTENSION_VERSION)
      updateTasksVersion: false
      extensionVisibility: ${{ parameters.extensionVisibility }}

  # Check extension
  - task: IsAzureDevOpsExtensionValid@3
    displayName: 'Check extension'
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      publisherId: ${{ parameters.publisherId }}
      extensionId: ${{ parameters.extensionId }}
      extensionTag: ${{ parameters.extensionTag }}
      extensionVersion: $(EXTENSION_VERSION)
